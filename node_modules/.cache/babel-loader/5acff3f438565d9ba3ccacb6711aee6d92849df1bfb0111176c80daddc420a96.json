{"ast":null,"code":"import { isRejectedWithValue } from '@reduxjs/toolkit';\nimport { toast } from 'react-toastify';\n\n/**\r\n * Log a warning and show a toast!\r\n */\nexport const rtkQueryErrorLogger = api => next => action => {\n  // RTK Query uses `createAsyncThunk` from redux-toolkit under the hood, so we're able to utilize these matchers!\n  if (isRejectedWithValue(action)) {\n    toast.error(action.payload.data.error.message);\n  }\n  return next(action);\n};","map":{"version":3,"names":["isRejectedWithValue","toast","rtkQueryErrorLogger","api","next","action","error","payload","data","message"],"sources":["C:/Users/smmho/Documents/GitHub/playmaker-ui/src/middlewares/error.js"],"sourcesContent":["import { isRejectedWithValue } from '@reduxjs/toolkit'\r\nimport { toast } from 'react-toastify';\r\n\r\n/**\r\n * Log a warning and show a toast!\r\n */\r\nexport const rtkQueryErrorLogger = (api) => (next) => (action) => {\r\n\r\n  // RTK Query uses `createAsyncThunk` from redux-toolkit under the hood, so we're able to utilize these matchers!\r\n  if (isRejectedWithValue(action)) {\r\n    toast.error(action.payload.data.error.message)\r\n  }\r\n  return next(action)\r\n}"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,kBAAkB;AACtD,SAASC,KAAK,QAAQ,gBAAgB;;AAEtC;AACA;AACA;AACA,OAAO,MAAMC,mBAAmB,GAAIC,GAAG,IAAMC,IAAI,IAAMC,MAAM,IAAK;EAEhE;EACA,IAAIL,mBAAmB,CAACK,MAAM,CAAC,EAAE;IAC/BJ,KAAK,CAACK,KAAK,CAACD,MAAM,CAACE,OAAO,CAACC,IAAI,CAACF,KAAK,CAACG,OAAO,CAAC;EAChD;EACA,OAAOL,IAAI,CAACC,MAAM,CAAC;AACrB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}